<!DOCTYPE html>
<html lang="fr">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>
			{% block title %}Chess Teams
			{% endblock %}
		</title>

		{{ importmap('app') }}

		{# Google Fonts pour NeoChess Framework #}
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
		<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

		{# CSS inclus via AssetMapper dans app.js #}
		{% block stylesheets %}
			{% block styles %}{% endblock %}
		{% endblock %}
	</head>

	<body>
		<!-- Header avec design NeoChess -->
		<div class="neo-container">
			<header class="neo-header neo-mb-xl">
				<div>
					<h1 class="neo-header-title">
						<a href="{{ path('app_home') }}" class="neo-text-primary" style="text-decoration: none;">
							Chess Teams
						</a>
					</h1>
					<span class="neo-header-info">Jeu d'√©checs en √©quipe</span>
				</div>
			</header>


			<!-- Main Content -->
			<main> 
				{% block body %}{% endblock %}
			</main>
		</div>

		<!-- Messages Flash Flottants -->
		<div id="neo-flash-container" class="neo-flash-container">
			{% for label, messages in app.flashes %}
				{% for message in messages %}
					<div class="neo-flash neo-flash-{{ label == 'error' or label == 'danger' ? 'error' : (label == 'success' ? 'success' : (label == 'warning' ? 'warning' : 'info')) }} neo-flash-show" data-flash-type="{{ label }}">
						<div class="neo-flash-content">
							<div class="neo-flash-icon">
								{% if label == 'success' %}
									‚úÖ
								{% elseif label == 'error' or label == 'danger' %}
									‚ùå
								{% elseif label == 'warning' %}
									‚ö†Ô∏è
								{% else %}
									‚ÑπÔ∏è
								{% endif %}
							</div>
							<div class="neo-flash-message">
								{{ message }}
							</div>
							<button class="neo-flash-close" onclick="this.parentElement.parentElement.remove()">
								√ó
							</button>
						</div>
					</div>
				{% endfor %}
			{% endfor %}
		</div>

			{# JavaScript NeoChess Framework #}
			{% block javascripts %}
				<script>
					document.addEventListener('DOMContentLoaded', function () {
						// NeoChess Framework JavaScript helpers
						console.log('üéØ NeoChess Framework charg√© - Chess Teams');
						
						// Gestion des messages flash flottants am√©lior√©e
						const flashMessages = document.querySelectorAll('.neo-flash');
						
						// Animation d'entr√©e pour les messages flash avec effets modernes
						flashMessages.forEach((flash, index) => {
							// D√©lai progressif avec animation en cascade
							setTimeout(() => {
								flash.classList.add('neo-flash-visible');
								flash.style.transform = 'translateX(0) scale(1)';
								flash.style.opacity = '1';
							}, index * 120);
							
							// Auto-hide apr√®s dur√©e variable selon le type
							const duration = flash.classList.contains('neo-flash-error') ? 7000 : 5000;
							setTimeout(() => {
								hideFlashMessage(flash);
							}, duration + (index * 120));
							
							// Ajouter interaction hover pour pause/resume
							flash.addEventListener('mouseenter', () => {
								flash.style.animationPlayState = 'paused';
							});
							
							flash.addEventListener('mouseleave', () => {
								flash.style.animationPlayState = 'running';
							});
						});
						
						// Fonction pour masquer un message flash avec animation fluide
						function hideFlashMessage(flash) {
							flash.classList.remove('neo-flash-visible');
							flash.classList.add('neo-flash-hide');
							
							// Animation de sortie fluide
							flash.style.transform = 'translateX(100%) scale(0.8)';
							flash.style.opacity = '0';
							
							setTimeout(() => {
								if (flash.parentElement) {
									// Animation de collapse pour √©viter le saut
									flash.style.height = '0';
									flash.style.margin = '0';
									flash.style.padding = '0';
									
									setTimeout(() => flash.remove(), 200);
								}
							}, 400);
						}
						
						// Fonction globale am√©lior√©e pour ajouter des messages flash via JavaScript
						window.addFlashMessage = function(type, message, options = {}) {
							const container = document.getElementById('neo-flash-container');
							if (!container) return;
							
							const icons = {
								success: 'üéâ',
								error: '‚ö†Ô∏è',
								warning: 'üí°',
								info: 'üì¢'
							};
							
							const flashElement = document.createElement('div');
							flashElement.className = `neo-flash neo-flash-${type} neo-flash-show`;
							flashElement.style.transform = 'translateX(100%) scale(0.8)';
							flashElement.style.opacity = '0';
							
							flashElement.innerHTML = `
								<div class="neo-flash-content">
									<div class="neo-flash-icon">${icons[type] || 'üì¢'}</div>
									<div class="neo-flash-message">${message}</div>
									<button class="neo-flash-close" onclick="hideFlashMessage(this.closest('.neo-flash'))">
										<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
											<line x1="18" y1="6" x2="6" y2="18"></line>
											<line x1="6" y1="6" x2="18" y2="18"></line>
										</svg>
									</button>
								</div>
								<div class="neo-flash-progress"></div>
							`;
							
							container.appendChild(flashElement);
							
							// Animation d'entr√©e fluide
							setTimeout(() => {
								flashElement.classList.add('neo-flash-visible');
								flashElement.style.transform = 'translateX(0) scale(1)';
								flashElement.style.opacity = '1';
							}, 50);
							
							// Barre de progression automatique
							const progressBar = flashElement.querySelector('.neo-flash-progress');
							const duration = options.duration || (type === 'error' ? 7000 : 5000);
							
							if (progressBar) {
								setTimeout(() => {
									progressBar.style.animationDuration = `${duration}ms`;
									progressBar.classList.add('neo-flash-progress-active');
								}, 100);
							}
							
							// Interactions
							flashElement.addEventListener('mouseenter', () => {
								if (progressBar) progressBar.style.animationPlayState = 'paused';
							});
							
							flashElement.addEventListener('mouseleave', () => {
								if (progressBar) progressBar.style.animationPlayState = 'running';
							});
							
							// Auto-hide
							if (!options.persistent) {
								setTimeout(() => {
									hideFlashMessage(flashElement);
								}, duration);
							}
							
							return flashElement;
						};
					});
				</script>
			{% endblock %}
		</body>
	</html>
