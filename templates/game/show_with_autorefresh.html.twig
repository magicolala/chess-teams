{% extends 'base.html.twig' %}
{% block title %}Partie {{ game.id }}{% endblock %}

{% block styles %}
	<!-- Styles existants -->
	{{ parent() }}
	<style>
		.auto-refresh-controls {
			position: fixed;
			top: 20px;
			right: 20px;
			z-index: 1000;
			background: var(--neo-bg-secondary);
			padding: var(--neo-spacing-md);
			border-radius: var(--neo-radius);
			border: 1px solid var(--neo-border-light);
			display: flex;
			gap: var(--neo-spacing-sm);
			align-items: center;
			font-size: var(--neo-font-size-xs);
		}
		.refresh-status {
			color: var(--neo-text-muted);
		}
	</style>
{% endblock %}

{% block body %}
	<div class="neo-animate-fadeIn">
		<!-- Contrôles d'actualisation (optionnels, peuvent être cachés en prod) -->
		<div class="auto-refresh-controls">
			<span class="refresh-status">🔄 Auto-refresh:</span>
			<span id="refresh-status">🟢 Actif</span>
			<button class="neo-btn neo-btn-sm neo-btn-secondary" data-action="game-poll#forceRefresh">
				⚡ Actualiser
			</button>
			<select class="neo-select neo-select-sm" data-action="game-poll#changeInterval">
				<option value="1">1s</option>
				<option value="2" selected>2s</option>
				<option value="5">5s</option>
				<option value="10">10s</option>
			</select>
		</div>

		<div class="neo-text-center neo-mb-xl">
			<h1 class="neo-text-2xl neo-font-bold neo-text-primary">
				♟️ Partie {{ game.id }}
			</h1>
		</div>

		<!-- Conteneur principal avec actualisation automatique -->
		<div 
			class="game-layout neo-animate-slideIn" 
			data-controller="game-board game-poll"
			data-game-board-fen-value="{{ initial.fen }}"
			data-game-board-game-id-value="{{ initial.gameId }}"
			data-game-board-turn-team-value="{{ initial.turnTeam }}"
			data-game-board-status-value="{{ initial.status }}"
			data-game-board-deadline-ts-value="{{ initial.turnDeadline ?: 0 }}"
			data-game-poll-game-id-value="{{ initial.gameId }}"
			data-game-poll-poll-interval-value="2000">
			
			<!-- Section de gauche: Échiquier + Actions -->
			<div class="board-section">
				<div id="board" class="cg-wrap coordinates"></div>
				<div class="game-actions">
					<button class="neo-btn neo-btn-secondary neo-btn-sm" data-action="game-board#offerMove" data-uci="e2e4">
						▶️ Jouer e2e4 (démo)
					</button>
					<button class="neo-btn neo-btn-warning neo-btn-sm" data-action="game-board#tick">
						⏰ Tick (timeout)
					</button>
				</div>
			</div>

			<!-- Section de droite: État + Historique + Équipes -->
			<div class="sidebar-section">
				<!-- État de la partie (mis à jour automatiquement) -->
				<div class="neo-card neo-mb-lg">
					<div class="neo-card-header">
						<h3 class="neo-card-title">ℹ️ État de la partie</h3>
					</div>
					<div class="neo-card-content">
						<div class="neo-flex neo-justify-between neo-items-center neo-mb-sm neo-p-sm neo-bg-secondary neo-rounded">
							<span class="neo-text-sm neo-font-medium">Tour actuel:</span>
							<span class="neo-badge neo-badge-primary" data-game-poll-target="currentTurn" data-game-board-target="turnTeam">{{ initial.turnTeam }}</span>
						</div>
						{% if currentPlayer and game.status == 'live' %}
							<div class="neo-flex neo-justify-between neo-items-center neo-mb-sm neo-p-sm neo-bg-info neo-rounded">
								<span class="neo-text-sm neo-font-medium">Joueur actuel:</span>
								<span class="neo-text-sm">
									{{ currentPlayer.user.displayName ?? 'Joueur' }}
									(Équipe {{ currentPlayer.team.name }})
									{% if userMembership and userMembership.id == currentPlayer.id %}
										⭐
									{% endif %}
								</span>
							</div>
						{% endif %}
						<div class="neo-flex neo-justify-between neo-items-center neo-mb-sm neo-p-sm neo-bg-secondary neo-rounded">
							<span class="neo-text-sm neo-font-medium">Temps restant:</span>
							<span class="neo-text-sm neo-font-mono neo-text-warning" data-game-poll-target="timer" data-game-board-target="timer">-</span>
						</div>
						<div class="neo-flex neo-justify-between neo-items-center neo-p-sm neo-bg-secondary neo-rounded">
							<span class="neo-text-sm neo-font-medium">Statut:</span>
							<div>
								<span class="neo-badge neo-badge-secondary" data-game-poll-target="gameStatus" data-game-board-target="status">{{ initial.status }}</span>
								<span data-game-board-target="result"></span>
							</div>
						</div>
					</div>
				</div>

				<!-- Historique des coups (actualisé automatiquement) -->
				<div class="neo-card neo-mb-lg">
					<div class="neo-card-header">
						<h3 class="neo-card-title">📋 Historique des coups</h3>
					</div>
					<div class="neo-card-content">
						<ol class="moves-list" id="moves-list">
							{% for m in moves %}
								<li class="move-item">
									<span class="move-notation">#{{ m.ply }}: {{ m.san ?? m.uci }}</span>
									<span class="neo-badge neo-badge-sm team-{{ m.team.name|lower }}">{{ m.team.name }}</span>
								</li>
							{% endfor %}
						</ol>
					</div>
				</div>

				<!-- Équipes -->
				<div class="neo-card">
					<div class="neo-card-header">
						<h3 class="neo-card-title">👥 Équipes</h3>
					</div>
					<div class="neo-card-content">
						<div class="team-section team-a">
							<div class="team-header">
								<i class="material-icons">group</i>
								<span class="team-badge">Équipe A</span>
								<span class="team-count">{{ teamA.members|length }} joueur{{ teamA.members|length > 1 ? 's' : '' }}</span>
							</div>
							{% if teamA and teamA.members|length > 0 %}
								<ul class="player-list">
									{% for member in teamA.members %}
										<li class="player-item{% if currentPlayer and currentPlayer.id == member.id %} current-player{% endif %}" 
											data-player-id="{{ member.id }}">
											<div class="player-info">
												<div class="player-avatar">
													<i class="material-icons">{{ member.user.displayName ? 'account_circle' : 'person_outline' }}</i>
												</div>
												<div class="player-details">
													<span class="player-name">
														{{ member.user.displayName ?? ('Joueur #' ~ loop.index) }}
													</span>
													<span class="player-meta">
														<i class="material-icons tiny">schedule</i>
														Rejoint {{ member.joinedAt|date('d/m à H:i') }}
														{% if member.position > 0 %}
															• Position {{ member.position }}
														{% endif %}
													</span>
												</div>
											</div>
											<div class="player-status">
												{% if currentPlayer and currentPlayer.id == member.id %}
													<span class="status-current">🎯 À son tour</span>
												{% elseif userMembership and userMembership.id == member.id %}
													<span class="status-you">👤 Vous</span>
												{% else %}
													<span class="status-ready">✓ Prêt</span>
												{% endif %}
											</div>
										</li>
									{% endfor %}
								</ul>
							{% else %}
								<div class="empty-team">
									<i class="material-icons">person_add</i>
									Aucun joueur dans l'équipe A
								</div>
							{% endif %}
						</div>

						<div class="team-section team-b">
							<div class="team-header">
								<i class="material-icons">group</i>
								<span class="team-badge">Équipe B</span>
								<span class="team-count">{{ teamB.members|length }} joueur{{ teamB.members|length > 1 ? 's' : '' }}</span>
							</div>
							{% if teamB and teamB.members|length > 0 %}
								<ul class="player-list">
									{% for member in teamB.members %}
										<li class="player-item{% if currentPlayer and currentPlayer.id == member.id %} current-player{% endif %}"
											data-player-id="{{ member.id }}">
											<div class="player-info">
												<div class="player-avatar">
													<i class="material-icons">{{ member.user.displayName ? 'account_circle' : 'person_outline' }}</i>
												</div>
												<div class="player-details">
													<span class="player-name">
														{{ member.user.displayName ?? ('Joueur #' ~ loop.index) }}
													</span>
													<span class="player-meta">
														<i class="material-icons tiny">schedule</i>
														Rejoint {{ member.joinedAt|date('d/m à H:i') }}
														{% if member.position > 0 %}
															• Position {{ member.position }}
														{% endif %}
													</span>
												</div>
											</div>
											<div class="player-status">
												{% if currentPlayer and currentPlayer.id == member.id %}
													<span class="status-current">🎯 À son tour</span>
												{% elseif userMembership and userMembership.id == member.id %}
													<span class="status-you">👤 Vous</span>
												{% else %}
													<span class="status-ready">✓ Prêt</span>
												{% endif %}
											</div>
										</li>
									{% endfor %}
								</ul>
							{% else %}
								<div class="empty-team">
									<i class="material-icons">person_add</i>
									Aucun joueur dans l'équipe B
								</div>
							{% endif %}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script>
		// Écouter les événements d'actualisation
		document.addEventListener('game-poll:game-updated', (event) => {
			console.log('🎮 Partie mise à jour:', event.detail)
			document.getElementById('refresh-status').textContent = '🟢 Mis à jour'
			
			// Réinitialiser le statut après 2 secondes
			setTimeout(() => {
				document.getElementById('refresh-status').textContent = '🟢 Actif'
			}, 2000)
		})

		// Gérer les erreurs de connexion
		document.addEventListener('game-poll:connection-error', (event) => {
			document.getElementById('refresh-status').textContent = '🔴 Erreur'
		})

		// Événement personnalisé pour les changements de FEN (échiquier)
		document.addEventListener('game-poll:fen-updated', (event) => {
			// Le contrôleur game-board peut écouter cet événement pour se mettre à jour
			console.log('♟️ Position mise à jour:', event.detail.fen)
		})
	</script>
{% endblock %}
